generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByNulls", "extendedWhereUnique"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(cuid())
  /// 用户名称
  name          String?
  /// 用户邮箱
  email         String    @unique
  /// 是否验证功能
  emailVerified DateTime? @map("email_verified")
  /// 用户头像
  image         String?
  /// 用户密码
  password      String?
  accounts      Account[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  provider          String
  providerAccountId String  @map("provider_account_id")
  refreshToken      String? @map("refresh_token")
  accessToken       String? @map("access_token")
  expiresAt         Int?    @map("expires_at")
  tokenType         String? @map("token_type")
  scope             String?
  idToken           String? @map("id_token")
  sessionState      String? @map("session_state")
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model VerificationToken {
  identifier String
  token      String                @unique
  type       VerificationTokenType
  createdAt  DateTime              @default(now()) @map("created_at")
  expires    DateTime
  usedAt     DateTime?             @map("used_at")

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Point {
  id     String @id @default(cuid())
  userId String @unique @map("user_id")

  @@map("points")
}

model Task {
  id            String    @id @default(cuid())
  /// 用户ID
  userId        String    @map("user_id")
  /// PDF hash
  pdfHash       String    @map("pdf_hash")
  /// 语言
  language      String
  /// 任务类型
  type          TaskType
  /// 消耗point
  consumePoints Decimal   @map("consume_points")
  state         TaskState
  /// 创建时间
  createdAt     DateTime  @map("created_at")
  /// 结束时间
  finishedAt    DateTime? @map("finished_at")
  summary       Summary?  @relation(fields: [pdfHash, language], references: [pdfHash, language])

  @@index([pdfHash, language, type])
  @@map("tasks")
}

model Summary {
  id                  String   @id @default(cuid())
  /// PDF hash
  pdfHash             String   @map("pdf_hash")
  /// 语言
  language            String
  /// 标题
  title               String   @db.Text
  /// 基础内容
  basicInfo           String   @map("basic_info") @db.Text
  /// 第一页总结内容
  firstPageConclution String   @map("first_page_conclution") @db.Text
  /// 总结内容
  content             String   @db.Text
  createdAt           DateTime
  tasks               Task[]

  @@unique([pdfHash, language])
  @@map("summaries")
}

model WxUser {
  id        String  @id
  open_id   String?
  union_id  String?
  nick_name String?
  phone     String  @unique
  avatar    String?

  @@map("wx_users")
}

enum VerificationTokenType {
  register
  reset_password
}

enum TaskState {
  /// 正在运行
  RUNNING
  /// 成功
  SUCCESS
  /// 失败
  FAIL
}

enum TaskType {
  /// 总结
  SUMMARY
  /// 翻译
  TRANSLATE
}
